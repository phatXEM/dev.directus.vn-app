apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"
apply from: file("../../node_modules/react-native-vector-icons/fonts.gradle")

// Add this code to load environment variables for Facebook configuration
def getNpmConfigValue(String envName) {
    Properties properties = new Properties()
    def envFile = rootProject.file("../.env")
    if (envFile.exists()) {
        properties.load(new FileInputStream(envFile))
        return properties.get(envName)
    }
    return ""
}

/**
 * This is the configuration block to customize your React Native Android app.
 * By default you don't need to apply any configuration, just uncomment the lines you need.
 */
react {
    /* Folders */
    //   The root of your project, i.e. where "package.json" lives. Default is '../..'
    // root = file("../../")
    //   The folder where the react-native NPM package is. Default is ../../node_modules/react-native
    // reactNativeDir = file("../../node_modules/react-native")
    //   The folder where the react-native Codegen package is. Default is ../../node_modules/@react-native/codegen
    // codegenDir = file("../../node_modules/@react-native/codegen")
    //   The cli.js file which is the React Native CLI entrypoint. Default is ../../node_modules/react-native/cli.js
    // cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    //   The list of variants to that are debuggable. For those we're going to
    //   skip the bundling of the JS bundle and the assets. By default is just 'debug'.
    //   If you add flavors like lite, prod, etc. you'll have to list your debuggableVariants.
    // debuggableVariants = ["liteDebug", "prodDebug"]

    /* Bundling */
    //   A list containing the node command and its flags. Default is just 'node'.
    nodeExecutableAndArgs = [rootProject.ext.nodeExecutables.node]
    
    // ...existing code...

    /* Autolinking */
    autolinkLibrariesWithApp()
}

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 *
 * For example, to use the international variant, you can use:
 * `def jscFlavor = io.github.react-native-community:jsc-android-intl:2026004.+`
 *
 * The international variant includes ICU i18n library and necessary data
 * allowing to use e.g. `Date.toLocaleString` and `String.localeCompare` that
 * give correct results when using with locales other than en-US. Note that
 * this variant is about 6MiB larger per architecture than default.
 */
def jscFlavor = 'io.github.react-native-community:jsc-android:2026004.+'

android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    namespace "vn.dev.directus"
    defaultConfig {
        applicationId "vn.dev.directus"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "1.0.1"
        
        // Add Facebook App ID and Client Token from .env file
        def fbAppId = getNpmConfigValue("FACEBOOK_APP_ID") ?: "fb_app_id_placeholder"
        resValue "string", "facebook_app_id", fbAppId
        resValue "string", "facebook_client_token", getNpmConfigValue("FACEBOOK_CLIENT_TOKEN") ?: "fb_client_token_placeholder"
        resValue "string", "fb_login_protocol_scheme", "fb" + fbAppId
        
        // Add Google Client ID from .env file
        resValue "string", "google_client_id", getNpmConfigValue("GOOGLE_CLIENT_ID") ?: "google_client_id_placeholder"
        
        // Disable some unused modules to prevent errors
        multiDexEnabled true
    }
    
    // Add packaging options to exclude problematic files
    packagingOptions {
        exclude "META-INF/DEPENDENCIES"
        exclude "META-INF/LICENSE"
        exclude "META-INF/LICENSE.txt"
        exclude "META-INF/license.txt"
        exclude "META-INF/NOTICE"
        exclude "META-INF/NOTICE.txt"
        exclude "META-INF/notice.txt"
        exclude "META-INF/ASL2.0"
    }
    
    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            // Caution! In production, you need to generate your own keystore file.
            // see https://reactnative.dev/docs/signed-apk-android.
            signingConfig signingConfigs.debug
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

dependencies {
    // The version of react-native is set by the React Native Gradle Plugin
    implementation("com.facebook.react:react-android")

    // Add Facebook SDK dependencies
    implementation 'com.facebook.android:facebook-android-sdk:latest.release'

    // Add Google Play Services dependencies
    implementation 'com.google.android.gms:play-services-auth:20.7.0'
    
    // Add AppCompat for SplashActivity
    implementation 'androidx.appcompat:appcompat:1.6.1'
    
    // Add MultiDex support to fix "No module info" errors
    implementation 'androidx.multidex:multidex:2.0.1'

    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}
